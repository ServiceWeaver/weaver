// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: runtime/protos/config.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A group of components.
type ComponentGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Components []string `protobuf:"bytes,1,rep,name=components,proto3" json:"components,omitempty"`
}

func (x *ComponentGroup) Reset() {
	*x = ComponentGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runtime_protos_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentGroup) ProtoMessage() {}

func (x *ComponentGroup) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_protos_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentGroup.ProtoReflect.Descriptor instead.
func (*ComponentGroup) Descriptor() ([]byte, []int) {
	return file_runtime_protos_config_proto_rawDescGZIP(), []int{0}
}

func (x *ComponentGroup) GetComponents() []string {
	if x != nil {
		return x.Components
	}
	return nil
}

// AppConfig holds configuration for a Service Weaver application.
type AppConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Application name (derived from binary if missing).
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// File name of the binary that implements the app.
	Binary string `protobuf:"bytes,2,opt,name=binary,proto3" json:"binary,omitempty"`
	// Arguments to pass to the binary.
	Args []string `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	// Environment variables available to the binary. Every entry should be of the
	// form "key=value". If a key appears more than once, only the last value of
	// the key is used.
	Env []string `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty"`
	// Groups of components that must be co-located in the same OS process.
	//
	// This grouping allows the developer a level of control on where the Service
	// Weaver runtime will place each component. For example, suppose that the
	// application binary contains six components: A, B, C, D, E, and F.
	// Furthermore, suppose that the developer specifies the following grouping in
	// the config.
	//
	//	colocate = [[A, B], [C, D, E]]
	//
	// In that case, no matter what algorithm the Service Weaver runtime uses to
	// place the components, components A and B will always be grouped together,
	// and components C, D, and E will always be grouped together. This means that
	// a pair of replicas of the components can share in-memory state and
	// communicate efficiently with each other (though not with other replicas).
	//
	// The placement algorithm the Service Weaver runtime uses varies across
	// deployment environment. For example, a multiprocess deployer may choose to
	// place each component into its own group, for maximum parallelism. A
	// singleprocess deployer, on the other hand, may choose to group all of the
	// components together. Regardless of which deployment environment is used,
	// however, this configuration option guarantees that specified components
	// will end up in the same group.
	//
	// Components are identified using their full package paths, e.g.:
	//
	//	"github.com/my/project/package/ComponentName"
	//
	// with the exception of the component associated with the application main(),
	// which is identified using the name "main".
	Colocate []*ComponentGroup `protobuf:"bytes,5,rep,name=colocate,proto3" json:"colocate,omitempty"`
	// A knob that lets the user specifies how many nanoseconds it expects for
	// the rollout to take. This is used internally by Service Weaver to figure
	// out the rollout strategy.
	//
	// If not specified, Service Weaver will pick a default value.
	RolloutNanos int64 `protobuf:"varint,6,opt,name=rollout_nanos,json=rolloutNanos,proto3" json:"rollout_nanos,omitempty"`
	// All config sections (includes [serviceweaver], [<deployer>], and
	// [<component>] sections).
	Sections map[string]string `protobuf:"bytes,7,rep,name=sections,proto3" json:"sections,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AppConfig) Reset() {
	*x = AppConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runtime_protos_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConfig) ProtoMessage() {}

func (x *AppConfig) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_protos_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConfig.ProtoReflect.Descriptor instead.
func (*AppConfig) Descriptor() ([]byte, []int) {
	return file_runtime_protos_config_proto_rawDescGZIP(), []int{1}
}

func (x *AppConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppConfig) GetBinary() string {
	if x != nil {
		return x.Binary
	}
	return ""
}

func (x *AppConfig) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *AppConfig) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *AppConfig) GetColocate() []*ComponentGroup {
	if x != nil {
		return x.Colocate
	}
	return nil
}

func (x *AppConfig) GetRolloutNanos() int64 {
	if x != nil {
		return x.RolloutNanos
	}
	return 0
}

func (x *AppConfig) GetSections() map[string]string {
	if x != nil {
		return x.Sections
	}
	return nil
}

// Deployment holds internal information necessary for an application
// deployment.
//
// TODO(mwhittaker): Delete this proto.
type Deployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Unique identifier for the deployment.
	// Application configuration.
	App *AppConfig `protobuf:"bytes,2,opt,name=app,proto3" json:"app,omitempty"`
	// Run as a single process locally.
	SingleProcess bool `protobuf:"varint,10,opt,name=single_process,json=singleProcess,proto3" json:"single_process,omitempty"`
}

func (x *Deployment) Reset() {
	*x = Deployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runtime_protos_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deployment) ProtoMessage() {}

func (x *Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_protos_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deployment.ProtoReflect.Descriptor instead.
func (*Deployment) Descriptor() ([]byte, []int) {
	return file_runtime_protos_config_proto_rawDescGZIP(), []int{2}
}

func (x *Deployment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Deployment) GetApp() *AppConfig {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *Deployment) GetSingleProcess() bool {
	if x != nil {
		return x.SingleProcess
	}
	return false
}

var File_runtime_protos_config_proto protoreflect.FileDescriptor

var file_runtime_protos_config_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb2, 0x02, 0x0a, 0x09, 0x41, 0x70, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x6f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x08, 0x63, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x4e, 0x61, 0x6e,
	0x6f, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x41,
	0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x69, 0x0a,
	0x0a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x03, 0x61,
	0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x03, 0x61, 0x70,
	0x70, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x57, 0x65,
	0x61, 0x76, 0x65, 0x72, 0x2f, 0x77, 0x65, 0x61, 0x76, 0x65, 0x72, 0x2f, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_runtime_protos_config_proto_rawDescOnce sync.Once
	file_runtime_protos_config_proto_rawDescData = file_runtime_protos_config_proto_rawDesc
)

func file_runtime_protos_config_proto_rawDescGZIP() []byte {
	file_runtime_protos_config_proto_rawDescOnce.Do(func() {
		file_runtime_protos_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_runtime_protos_config_proto_rawDescData)
	})
	return file_runtime_protos_config_proto_rawDescData
}

var file_runtime_protos_config_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_runtime_protos_config_proto_goTypes = []interface{}{
	(*ComponentGroup)(nil), // 0: runtime.ComponentGroup
	(*AppConfig)(nil),      // 1: runtime.AppConfig
	(*Deployment)(nil),     // 2: runtime.Deployment
	nil,                    // 3: runtime.AppConfig.SectionsEntry
}
var file_runtime_protos_config_proto_depIdxs = []int32{
	0, // 0: runtime.AppConfig.colocate:type_name -> runtime.ComponentGroup
	3, // 1: runtime.AppConfig.sections:type_name -> runtime.AppConfig.SectionsEntry
	1, // 2: runtime.Deployment.app:type_name -> runtime.AppConfig
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_runtime_protos_config_proto_init() }
func file_runtime_protos_config_proto_init() {
	if File_runtime_protos_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_runtime_protos_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runtime_protos_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runtime_protos_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_runtime_protos_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_runtime_protos_config_proto_goTypes,
		DependencyIndexes: file_runtime_protos_config_proto_depIdxs,
		MessageInfos:      file_runtime_protos_config_proto_msgTypes,
	}.Build()
	File_runtime_protos_config_proto = out.File
	file_runtime_protos_config_proto_rawDesc = nil
	file_runtime_protos_config_proto_goTypes = nil
	file_runtime_protos_config_proto_depIdxs = nil
}
