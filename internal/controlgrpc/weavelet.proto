// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
option go_package = "github.com/ServiceWeaver/weaver/internal/controlgrpc";

package control;

// Generate Go proto code.
// protoc --go_out=. --go_opt=paths=source_relative --proto_path=. --go-grpc_out=. --go-grpc_opt=paths=source_relative internal/control/weavelet.proto

import "runtime/protos/runtime.proto";

// WeaveletControl is the interface for the weaver.weaveletControl component. It is
// present in its own package so other packages do not need to copy the interface
// definition.
//
// Arguments and results are protobufs to allow deployers to evolve independently of
// application binaries.
service WeaveletControlGrpc {
  // InitWeavelet initializes the weavelet.
  rpc InitWeavelet(runtime.InitWeaveletRequest) returns (runtime.InitWeaveletReply) {}

  // UpdateComponents updates the weavelet with the latest set of components it
  // should be running.
  rpc UpdateComponents(runtime.UpdateComponentsRequest) returns (runtime.UpdateComponentsReply) {}

  // UpdateRoutingInfo updates the weavelet with a component's most recent routing info.
  rpc UpdateRoutingInfo(runtime.UpdateRoutingInfoRequest) returns (runtime.UpdateRoutingInfoReply) {}

  // GetHealth fetches weavelet health information.
  rpc GetHealth(runtime.GetHealthRequest) returns (runtime.GetHealthReply) {}

  // GetLoad fetches weavelet load information.
  rpc GetLoad(runtime.GetLoadRequest) returns (runtime.GetLoadReply) {}

  // GetMetrics fetches metrics from the weavelet.
  rpc GetMetrics(runtime.GetMetricsRequest) returns (runtime.GetMetricsReply) {}

  // GetProfile gets a profile from the weavelet.
  rpc GetProfile(runtime.GetProfileRequest) returns (runtime.GetProfileReply) {}
}