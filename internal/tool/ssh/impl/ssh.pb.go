// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: internal/tool/ssh/impl/ssh.proto

package impl

import (
	protos "github.com/ServiceWeaver/weaver/runtime/protos"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AppVersionState contains state managed for an application version by the
// babysitter.
type AppVersionState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App            string                           `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	DeploymentId   string                           `protobuf:"bytes,2,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	SubmissionTime *timestamppb.Timestamp           `protobuf:"bytes,3,opt,name=submission_time,json=submissionTime,proto3" json:"submission_time,omitempty"`
	Groups         map[string]*ColocationGroupState `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // per group information
	Listeners      []*protos.Listener               `protobuf:"bytes,5,rep,name=listeners,proto3" json:"listeners,omitempty"`                                                                                   // per listener information
}

func (x *AppVersionState) Reset() {
	*x = AppVersionState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_tool_ssh_impl_ssh_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppVersionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppVersionState) ProtoMessage() {}

func (x *AppVersionState) ProtoReflect() protoreflect.Message {
	mi := &file_internal_tool_ssh_impl_ssh_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppVersionState.ProtoReflect.Descriptor instead.
func (*AppVersionState) Descriptor() ([]byte, []int) {
	return file_internal_tool_ssh_impl_ssh_proto_rawDescGZIP(), []int{0}
}

func (x *AppVersionState) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *AppVersionState) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *AppVersionState) GetSubmissionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmissionTime
	}
	return nil
}

func (x *AppVersionState) GetGroups() map[string]*ColocationGroupState {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *AppVersionState) GetListeners() []*protos.Listener {
	if x != nil {
		return x.Listeners
	}
	return nil
}

type ColocationGroupState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Name of the colocation group.
	// The set of components that a colocation group in a given deployment
	// should be running, along with their routing status (whether a component is
	// routed).
	Components map[string]bool `protobuf:"bytes,2,rep,name=components,proto3" json:"components,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// The list of replica addresses for the colocation group.
	Replicas []string `protobuf:"bytes,3,rep,name=replicas,proto3" json:"replicas,omitempty"`
	// It contains the list of replica pids for the colocation group.
	ReplicaPids []int64 `protobuf:"varint,4,rep,packed,name=replica_pids,json=replicaPids,proto3" json:"replica_pids,omitempty"`
	// It contains the list of assignments for the routed components that are
	// running in a colocation group.
	Assignments map[string]*protos.Assignment `protobuf:"bytes,5,rep,name=assignments,proto3" json:"assignments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ColocationGroupState) Reset() {
	*x = ColocationGroupState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_tool_ssh_impl_ssh_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColocationGroupState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColocationGroupState) ProtoMessage() {}

func (x *ColocationGroupState) ProtoReflect() protoreflect.Message {
	mi := &file_internal_tool_ssh_impl_ssh_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColocationGroupState.ProtoReflect.Descriptor instead.
func (*ColocationGroupState) Descriptor() ([]byte, []int) {
	return file_internal_tool_ssh_impl_ssh_proto_rawDescGZIP(), []int{1}
}

func (x *ColocationGroupState) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ColocationGroupState) GetComponents() map[string]bool {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *ColocationGroupState) GetReplicas() []string {
	if x != nil {
		return x.Replicas
	}
	return nil
}

func (x *ColocationGroupState) GetReplicaPids() []int64 {
	if x != nil {
		return x.ReplicaPids
	}
	return nil
}

func (x *ColocationGroupState) GetAssignments() map[string]*protos.Assignment {
	if x != nil {
		return x.Assignments
	}
	return nil
}

// BabysitterInfo contains app deployment information that is needed by a
// babysitter started using SSH to manage a colocation group.
type BabysitterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment  *protos.Deployment      `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	Group       *protos.ColocationGroup `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	ReplicaId   int32                   `protobuf:"varint,3,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	ManagerAddr string                  `protobuf:"bytes,4,opt,name=manager_addr,json=managerAddr,proto3" json:"manager_addr,omitempty"`
	LogDir      string                  `protobuf:"bytes,5,opt,name=logDir,proto3" json:"logDir,omitempty"`
}

func (x *BabysitterInfo) Reset() {
	*x = BabysitterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_tool_ssh_impl_ssh_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BabysitterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BabysitterInfo) ProtoMessage() {}

func (x *BabysitterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_tool_ssh_impl_ssh_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BabysitterInfo.ProtoReflect.Descriptor instead.
func (*BabysitterInfo) Descriptor() ([]byte, []int) {
	return file_internal_tool_ssh_impl_ssh_proto_rawDescGZIP(), []int{2}
}

func (x *BabysitterInfo) GetDeployment() *protos.Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

func (x *BabysitterInfo) GetGroup() *protos.ColocationGroup {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *BabysitterInfo) GetReplicaId() int32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *BabysitterInfo) GetManagerAddr() string {
	if x != nil {
		return x.ManagerAddr
	}
	return ""
}

func (x *BabysitterInfo) GetLogDir() string {
	if x != nil {
		return x.LogDir
	}
	return ""
}

// BabysitterMetrics is a snapshot of a deployment's metrics as collected by a
// babysitter for a given colocation group.
type BabysitterMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName string                   `protobuf:"bytes,1,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	ReplicaId int32                    `protobuf:"varint,2,opt,name=replica_id,json=replicaId,proto3" json:"replica_id,omitempty"`
	Metrics   []*protos.MetricSnapshot `protobuf:"bytes,3,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *BabysitterMetrics) Reset() {
	*x = BabysitterMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_tool_ssh_impl_ssh_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BabysitterMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BabysitterMetrics) ProtoMessage() {}

func (x *BabysitterMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_internal_tool_ssh_impl_ssh_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BabysitterMetrics.ProtoReflect.Descriptor instead.
func (*BabysitterMetrics) Descriptor() ([]byte, []int) {
	return file_internal_tool_ssh_impl_ssh_proto_rawDescGZIP(), []int{3}
}

func (x *BabysitterMetrics) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *BabysitterMetrics) GetReplicaId() int32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *BabysitterMetrics) GetMetrics() []*protos.MetricSnapshot {
	if x != nil {
		return x.Metrics
	}
	return nil
}

var File_internal_tool_ssh_impl_ssh_proto protoreflect.FileDescriptor

var file_internal_tool_ssh_impl_ssh_proto_rawDesc = []byte{
	0x0a, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x2f,
	0x73, 0x73, 0x68, 0x2f, 0x69, 0x6d, 0x70, 0x6c, 0x2f, 0x73, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x69, 0x6d, 0x70, 0x6c, 0x1a, 0x1c, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x02, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x43, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x6d, 0x70, 0x6c, 0x2e, 0x41,
	0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x73, 0x1a, 0x55, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6d, 0x70, 0x6c, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x98, 0x03, 0x0a, 0x14, 0x43,
	0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6d,
	0x70, 0x6c, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x70, 0x69, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x50, 0x69,
	0x64, 0x73, 0x12, 0x4d, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6d, 0x70, 0x6c, 0x2e, 0x43,
	0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x53, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xcf, 0x01, 0x0a, 0x0e, 0x42, 0x61, 0x62, 0x79, 0x73, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x44, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x6f, 0x67, 0x44, 0x69, 0x72, 0x22, 0x84, 0x01, 0x0a, 0x11, 0x42, 0x61, 0x62, 0x79,
	0x73, 0x69, 0x74, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x42, 0x38,
	0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x57, 0x65, 0x61, 0x76, 0x65, 0x72, 0x2f, 0x77, 0x65, 0x61, 0x76, 0x65,
	0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x2f,
	0x73, 0x73, 0x68, 0x2f, 0x69, 0x6d, 0x70, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_tool_ssh_impl_ssh_proto_rawDescOnce sync.Once
	file_internal_tool_ssh_impl_ssh_proto_rawDescData = file_internal_tool_ssh_impl_ssh_proto_rawDesc
)

func file_internal_tool_ssh_impl_ssh_proto_rawDescGZIP() []byte {
	file_internal_tool_ssh_impl_ssh_proto_rawDescOnce.Do(func() {
		file_internal_tool_ssh_impl_ssh_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_tool_ssh_impl_ssh_proto_rawDescData)
	})
	return file_internal_tool_ssh_impl_ssh_proto_rawDescData
}

var file_internal_tool_ssh_impl_ssh_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_internal_tool_ssh_impl_ssh_proto_goTypes = []interface{}{
	(*AppVersionState)(nil),        // 0: impl.AppVersionState
	(*ColocationGroupState)(nil),   // 1: impl.ColocationGroupState
	(*BabysitterInfo)(nil),         // 2: impl.BabysitterInfo
	(*BabysitterMetrics)(nil),      // 3: impl.BabysitterMetrics
	nil,                            // 4: impl.AppVersionState.GroupsEntry
	nil,                            // 5: impl.ColocationGroupState.ComponentsEntry
	nil,                            // 6: impl.ColocationGroupState.AssignmentsEntry
	(*timestamppb.Timestamp)(nil),  // 7: google.protobuf.Timestamp
	(*protos.Listener)(nil),        // 8: runtime.Listener
	(*protos.Deployment)(nil),      // 9: runtime.Deployment
	(*protos.ColocationGroup)(nil), // 10: runtime.ColocationGroup
	(*protos.MetricSnapshot)(nil),  // 11: runtime.MetricSnapshot
	(*protos.Assignment)(nil),      // 12: runtime.Assignment
}
var file_internal_tool_ssh_impl_ssh_proto_depIdxs = []int32{
	7,  // 0: impl.AppVersionState.submission_time:type_name -> google.protobuf.Timestamp
	4,  // 1: impl.AppVersionState.groups:type_name -> impl.AppVersionState.GroupsEntry
	8,  // 2: impl.AppVersionState.listeners:type_name -> runtime.Listener
	5,  // 3: impl.ColocationGroupState.components:type_name -> impl.ColocationGroupState.ComponentsEntry
	6,  // 4: impl.ColocationGroupState.assignments:type_name -> impl.ColocationGroupState.AssignmentsEntry
	9,  // 5: impl.BabysitterInfo.deployment:type_name -> runtime.Deployment
	10, // 6: impl.BabysitterInfo.group:type_name -> runtime.ColocationGroup
	11, // 7: impl.BabysitterMetrics.metrics:type_name -> runtime.MetricSnapshot
	1,  // 8: impl.AppVersionState.GroupsEntry.value:type_name -> impl.ColocationGroupState
	12, // 9: impl.ColocationGroupState.AssignmentsEntry.value:type_name -> runtime.Assignment
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_internal_tool_ssh_impl_ssh_proto_init() }
func file_internal_tool_ssh_impl_ssh_proto_init() {
	if File_internal_tool_ssh_impl_ssh_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_tool_ssh_impl_ssh_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppVersionState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_tool_ssh_impl_ssh_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColocationGroupState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_tool_ssh_impl_ssh_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BabysitterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_tool_ssh_impl_ssh_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BabysitterMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_tool_ssh_impl_ssh_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_tool_ssh_impl_ssh_proto_goTypes,
		DependencyIndexes: file_internal_tool_ssh_impl_ssh_proto_depIdxs,
		MessageInfos:      file_internal_tool_ssh_impl_ssh_proto_msgTypes,
	}.Build()
	File_internal_tool_ssh_impl_ssh_proto = out.File
	file_internal_tool_ssh_impl_ssh_proto_rawDesc = nil
	file_internal_tool_ssh_impl_ssh_proto_goTypes = nil
	file_internal_tool_ssh_impl_ssh_proto_depIdxs = nil
}
