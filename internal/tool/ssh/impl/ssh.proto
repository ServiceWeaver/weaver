// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "github.com/ServiceWeaver/weaver/internal/tool/ssh/impl";

package impl;
import "runtime/protos/runtime.proto";

// BabysitterInfo contains app deployment information that is needed by a
// babysitter started using SSH to manage a colocation group.
message BabysitterInfo {
  runtime.Deployment deployment = 1;
  runtime.ColocationGroup group = 2;
  int32 replica_id = 3;
  string manager_addr = 4;
  string logDir = 5;
}

// A request from the babysitter to the manager to get the latest set of
// components to run.
message GetComponentsRequest {
  string group = 1;
  string version = 2;
}

message GetComponentsReply {
  repeated string components = 1;
  string version = 2;
}

// A request from the babysitter to the manager to get the latest routing info
// for a component.
message GetRoutingInfoRequest {
  string component = 1;
  string version = 2;
}

message GetRoutingInfoReply {
  runtime.RoutingInfo routing_info = 1;
  string version = 2;
}

// BabysitterMetrics is a snapshot of a deployment's metrics as collected by a
// babysitter for a given colocation group.
message BabysitterMetrics {
  string group_name = 1;
  int32 replica_id = 2;
  repeated runtime.MetricSnapshot metrics = 3;
}

// ReplicaToRegister is a request to the manager to register a replica of
// a given colocation group (i.e., a weavelet).
message ReplicaToRegister {
  string group = 1;
  string address = 2;  // Replica internal address.
  int64 pid = 3;       // Replica pid.
}
