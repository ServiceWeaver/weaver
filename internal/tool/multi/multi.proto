// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
option go_package = "github.com/ServiceWeaver/weaver/internal/tool/multi";

package multi;
import "runtime/protos/config.proto";

// Cgroup stores the configuration realted to any cgroup provided
// for the child processes.
message Cgroup {
  // Cgroup mountpoint allows end users to override default
  // system mountpoint i.e `/sys/fs/cgroup`
  string mountpoint = 1;
  // Allows users to provide Cgroup groupname and weaver will
  // add all the child processes to that specific cgroup.
  string groupname = 2;
}

// MultiConfig stores the configuration information for one execution of a
// Service Weaver application using the multiprocess deployer.
message MultiConfig {
  // Application config.
  runtime.AppConfig app = 1;

  // Should the components use the mTLS protocol to communicate with
  // one another?
  bool mtls = 2;

  // Options for the application listeners, keyed by listener name.
  // If a listener isn't specified in the map, default options will be used.
  message ListenerOptions {
    // Address of the listener. The value must have the form :port or
    // host:port, or it may be the empty string, which is treated as ":0".
    string address = 1;
  }
  map<string, ListenerOptions> listeners = 3;

  // Cgroup config for the deployment which allows end-users to add the child
  // processes created by weaver into the specified cgroup.
  Cgroup cgroup = 4;
}
